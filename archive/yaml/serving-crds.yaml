apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificates.networking.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  names:
    kind: Certificate
    plural: certificates
    singular: certificate
    categories:
    - knative-internal
    - networking
    shortNames:
    - kcert
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterdomainclaims.networking.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
  names:
    kind: ClusterDomainClaim
    plural: clusterdomainclaims
    singular: clusterdomainclaim
    categories:
    - knative-internal
    - networking
    shortNames:
    - cdc
  scope: Cluster
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: domainmappings.serving.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
    duck.knative.dev/addressable: "true"
spec:
  group: serving.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  names:
    kind: DomainMapping
    plural: domainmappings
    singular: domainmapping
    categories:
    - knative-serving
    - all
    shortNames:
    - dm
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: images.caching.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: caching.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
  names:
    kind: Image
    plural: images
    singular: image
    categories:
    - knative-internal
    - caching
    shortNames:
    - img
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingresses.networking.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  names:
    kind: Ingress
    plural: ingresses
    singular: ingress
    categories:
    - knative-internal
    - networking
    shortNames:
    - kingress
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: metrics.autoscaling.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: autoscaling.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
  names:
    kind: Metric
    plural: metrics
    singular: metric
    categories:
    - knative-internal
    - autoscaling
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podautoscalers.autoscaling.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: autoscaling.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  names:
    kind: PodAutoscaler
    plural: podautoscalers
    singular: podautoscaler
    categories:
    - knative-internal
    - autoscaling
    shortNames:
    - kpa
    - pa
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: revisions.serving.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: serving.knative.dev
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Config Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/configuration']"
    - name: Service Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/service']"
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1beta1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Config Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/configuration']"
    - name: Service Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/service']"
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1alpha1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Config Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/configuration']"
    - name: Service Name
      type: string
      jsonPath: ".metadata.labels['serving\\.knative\\.dev/service']"
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  names:
    kind: Revision
    plural: revisions
    singular: revision
    categories:
    - knative-serving
    - all
    shortNames:
    - rev
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: routes.serving.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
    duck.knative.dev/addressable: "true"
spec:
  group: serving.knative.dev
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1beta1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1alpha1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  names:
    kind: Route
    plural: routes
    singular: route
    categories:
    - knative-serving
    - all
    shortNames:
    - rt
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serverlessservices.networking.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: Mode
      type: string
      jsonPath: ".spec.mode"
    - name: Activators
      type: integer
      jsonPath: ".spec.numActivators"
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  names:
    kind: ServerlessService
    plural: serverlessservices
    singular: serverlessservice
    categories:
    - knative-internal
    - networking
    shortNames:
    - sks
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: services.serving.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.9.0"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v1.9.0"
    duck.knative.dev/addressable: "true"
    duck.knative.dev/podspecable: "true"
spec:
  group: serving.knative.dev
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Latestcreated
      type: string
      jsonPath: .status.latestCreatedRevisionName
    - name: Latestready
      type: string
      jsonPath: .status.latestReadyRevisionName
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1beta1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Latestcreated
      type: string
      jsonPath: .status.latestCreatedRevisionName
    - name: Latestready
      type: string
      jsonPath: .status.latestReadyRevisionName
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: v1alpha1
    served: true
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        # this is a work around so we don't need to flush out the
        # schema for each version at this time
        #
        # see issue: https://github.com/knative/serving/issues/912
        x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.url
    - name: Latestcreated
      type: string
      jsonPath: .status.latestCreatedRevisionName
    - name: Latestready
      type: string
      jsonPath: .status.latestReadyRevisionName
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  names:
    kind: Service
    plural: services
    singular: service
    categories:
    - knative-serving
    - all
    shortNames:
    - kservice
    - ksvc
  scope: Namespaced 